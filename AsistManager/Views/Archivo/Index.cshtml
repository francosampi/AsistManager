@model Evento

<head>
    <link rel="stylesheet" href="~/css/tablaRegistros.css" />
    <link rel="stylesheet" href="~/css/formImportarRegistros.css" />
    <link rel="stylesheet" href="~/css/botones.css" />
</head>

<h3>Manejo de archivos</h3>

<fieldset class="mt-4">
    <!--Mostrar alerta-->
    <partial name="_Alert" />

    <div class="card shadow-sm">
        <div class="card-header">
            <a class="btn btn-secondary my-2" asp-controller="Evento" asp-action="Menu" asp-route-id="@Model.Id">
                Atrás
            </a>
        </div>

        <div class="card-body">

            <!--Formulario para cargar archivo, y subirlo a la base-->
            <form method="post" enctype="multipart/form-data">
                <div class="my-2">

                    <input type="hidden" name="id" value="@Model?.Id" />

                    <div class="d-flex justify-content-around">

                        <div class="btn-group">

                            <!--Exportar molde de Excel para su modificación-->
                            <button id="exportButton" type="submit" asp-controller="Archivo" asp-action="ExportSheet"
                                    class="btn btn-outline-info btn-lg">
                                Exportar molde
                                <i class="bi bi-file"></i>
                            </button>

                            <!--Insertar archivo Excel para su lectura-->
                            <label class="btn btn-outline-dark btn-lg">
                                <input id="fileInput" type="file" name="file" onchange="alCargarArchivo()">
                                Importar archivo
                                <i class="bi bi-file-arrow-up"></i>
                            </label>
                    
                            <!--Insertar registros del archivo a la base-->
                            <button id="insertButton" type="submit" asp-controller="Archivo" asp-action="Insert"
                                class="btn btn-outline-success btn-lg" disabled>
                                Insertar registros
                                <i class="bi bi-database-add"></i>
                            </button>

                            <!--Exportar archico de Excel con todos los acreditados del evento-->
                            <button id="exportButton" type="submit" asp-controller="Archivo" asp-action="ExportAccredited"
                                    class="btn btn-outline-warning btn-lg">
                                Exportar registros
                                <i class="bi bi-file-arrow-down"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </form>

            <!--Lista para previsualizar los registros antes de subirlos a la base-->
            @if (ViewBag.Registros != null)
            {
                var listaRegistros = ViewBag.Registros as List<Acreditado>;

                <div class="mt-4">

                    <hr />

                    <h4>Últimos registros insertados</h4>

                    <!--Informar cantidad de acreditados-->
                    <div class="mt-3">
                        @if (listaRegistros!.Count == 0)
                        {
                            <label class="fw-bold text-danger">No se han encontrado registros.</label>
                        }
                        else
                        {
                            <label class="fw-bold text-secondary">Mostrando @listaRegistros!.Count registro(s)</label>
                        }
                    </div>

                    <!--Tabla de registros-->
                    <partial name="_TablaAcreditados" model="listaRegistros" />
                </div>
            }
            
            <div class="mt-4">
                <div class="text-warning my-2">
                    <i class="bi bi-exclamation-triangle"></i>
                    <span id="tabla-registros-alcargar-advert" class="fw-bold">
                        Cuidado: Revisar los registros antes de insertarlos.
                    </span>
                </div>
                <table id="tabla-registros-alcargar" class="table table-striped w-100 my-4">
                    <thead>
                        <tr>
                            <th>Nombre</th>
                            <th>Apellido</th>
                            <th>DNI</th>
                            <th>CUIT</th>
                            <th>Celular</th>
                            <th>Grupo</th>
                            <th>Habilitado</th>
                            <th>Alta</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            
        </div>
    </div>
</fieldset>

@section Scripts{
    <script>

        function alCargarArchivo() {

            function toggleInsertButtonAndTable() {
                insertBtn.disabled = !inputBtn.files || inputBtn.files.length === 0;
            }

            const inputBtn = document.getElementById("fileInput");
            const insertBtn = document.getElementById("insertButton");
            const tablaRegistros = document.getElementById("tabla-registros-alcargar");

            const formData = new FormData();

            //Escuchar si hubo un cambio en el input de importar archivo
            inputBtn.addEventListener("change", toggleInsertButtonAndTable);

            //Habilitar insertar registros
            toggleInsertButtonAndTable();

            //Obtener archivo del input
            formData.append("file", inputBtn.files[0]);

            //Antes de mostrar los registros, vaciar la tabla
            $("#tabla-registros-alcargar tbody").empty();

            //Hacer petición al Read para devolver los registros del excel en JSON
            fetch("/Archivo/Read", {
                method: "POST",
                body: formData
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Ocurrió un problema al procesar el archivo.');
                }

                return response.json();
            })
            .then(dataJson => {

                //Si la petición fue correcta, mostrar la tabla
                    dataJson.forEach((registro) => {

                        var error = false;
                        var estadoRegistro = "Válido";
                        var iconoEstado = '<i class="bi bi-check-circle text-success"></i>';

                        //Verificar si falta algún dato requerido
                        if (!registro.nombre || !registro.apellido || !registro.dni || !registro.cuit) {
                            error = true;
                            estadoRegistro = "Inválido";
                            iconoEstado = '<i class="bi bi-exclamation-circle text-danger"></i>';
                        }

                        //Crear fila y darle estilo según corresponda y agregarla
                        const $fila = $("<tr>");

                        $fila.append(
                            $("<td>").text(registro.nombre),
                            $("<td>").text(registro.apellido),
                            $("<td>").text(registro.dni),
                            $("<td>").text(registro.cuit),
                            $("<td>").text(registro.celular),
                            $("<td>").text(registro.grupo),
                            $("<td>").text(registro.habilitado ? "Sí" : "No"),
                            $("<td>").text(registro.alta ? "Sí" : "No"),
                            $("<td>").html(iconoEstado + estadoRegistro)
                        );

                        if (error) {
                            $fila.addClass("bg-warning");
                        }

                        $("#tabla-registros-alcargar tbody").append($fila);
                    });
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
    </script>
}